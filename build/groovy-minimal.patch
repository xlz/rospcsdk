diff -rup -x .git src/catkin/cmake/all.cmake src.good/catkin/cmake/all.cmake
--- src/catkin/cmake/all.cmake	2014-02-02 08:11:01.306841528 +0000
+++ src.good/catkin/cmake/all.cmake	2014-02-02 08:06:40.021234634 +0000
@@ -120,11 +120,6 @@ foreach(filename
     platform/lsb
     platform/ubuntu
     platform/windows
-    test/tests # defines CATKIN_ENABLE_TESTING, required by other test functions
-    test/catkin_download_test_data
-    test/download_test_data
-    test/gtest
-    test/nosetests
     tools/doxygen
     tools/libraries
     tools/rt
diff -rup -x .git src/catkin/cmake/catkin_generate_environment.cmake src.good/catkin/cmake/catkin_generate_environment.cmake
--- src/catkin/cmake/catkin_generate_environment.cmake	2014-02-02 08:11:01.306841528 +0000
+++ src.good/catkin/cmake/catkin_generate_environment.cmake	2014-02-02 05:35:45.152865011 +0000
@@ -15,7 +15,7 @@ function(catkin_generate_environment)
     ${CATKIN_DEVEL_PREFIX}/_setup_util.py
     @ONLY)
 
-  if(NOT WIN32)
+  if(NOT WIN32 OR MINGW)
     # non-windows
     # generate env
     configure_file(${catkin_EXTRAS_DIR}/templates/env.sh.in
@@ -63,7 +63,7 @@ function(catkin_generate_environment)
       DESTINATION ${CMAKE_INSTALL_PREFIX})
   endif()
 
-  if(NOT WIN32)
+  if(NOT WIN32 OR MINGW)
     # non-windows
     # generate and install env
     configure_file(${catkin_EXTRAS_DIR}/templates/env.sh.in
diff -rup -x .git src/catkin/cmake/catkin_python_setup.cmake src.good/catkin/cmake/catkin_python_setup.cmake
--- src/catkin/cmake/catkin_python_setup.cmake	2014-02-02 08:11:01.306841528 +0000
+++ src.good/catkin/cmake/catkin_python_setup.cmake	2014-02-02 05:35:45.152865011 +0000
@@ -33,7 +33,7 @@ function(catkin_python_setup)
 
   assert(PYTHON_INSTALL_DIR)
   set(INSTALL_CMD_WORKING_DIRECTORY ${${PROJECT_NAME}_SOURCE_DIR})
-  if(NOT WIN32)
+  if(NOT WIN32 OR MINGW)
     set(INSTALL_SCRIPT
       ${CMAKE_CURRENT_BINARY_DIR}/catkin_generated/python_distutils_install.sh)
     configure_file(${catkin_EXTRAS_DIR}/templates/python_distutils_install.sh.in
diff -rup -x .git src/catkin/cmake/python.cmake src.good/catkin/cmake/python.cmake
--- src/catkin/cmake/python.cmake	2014-02-02 08:11:01.310841553 +0000
+++ src.good/catkin/cmake/python.cmake	2014-02-02 05:35:45.152865011 +0000
@@ -24,7 +24,7 @@ else()
   file(TO_NATIVE_PATH "${CMAKE_INSTALL_PREFIX}" SETUPTOOLS_INSTALL_PREFIX)
 endif()
 
-if(NOT WIN32)
+if(NOT WIN32 OR MINGW)
   set(PYTHON_INSTALL_DIR lib/python${PYTHON_VERSION_XDOTY}/${PYTHON_PACKAGES_DIR}
     CACHE INTERNAL "This needs to be in PYTHONPATH when 'setup.py install' is called.  And it needs to match.  But setuptools won't tell us where it will install things.")
 else()
diff -rup -x .git src/message_generation/CMakeLists.txt src.good/message_generation/CMakeLists.txt
--- src/message_generation/CMakeLists.txt	2014-02-02 08:11:01.150840568 +0000
+++ src.good/message_generation/CMakeLists.txt	2014-02-02 07:45:34.621468283 +0000
@@ -3,4 +3,4 @@ project(message_generation)
 
 find_package(catkin REQUIRED)
 
-catkin_package(CATKIN_DEPENDS gencpp genlisp genmsg genpy)
+catkin_package(CATKIN_DEPENDS gencpp genmsg)
diff -rup -x .git src/message_generation/package.xml src.good/message_generation/package.xml
--- src/message_generation/package.xml	2014-02-02 08:11:01.150840568 +0000
+++ src.good/message_generation/package.xml	2014-02-02 07:45:22.841394687 +0000
@@ -13,7 +13,5 @@
   <buildtool_depend>catkin</buildtool_depend>
 
   <run_depend>gencpp</run_depend>
-  <run_depend>genlisp</run_depend>
   <run_depend>genmsg</run_depend>
-  <run_depend>genpy</run_depend>
 </package>
diff -rup -x .git src/message_runtime/package.xml src.good/message_runtime/package.xml
--- src/message_runtime/package.xml	2014-02-02 08:11:01.150840568 +0000
+++ src.good/message_runtime/package.xml	2014-02-02 07:45:10.937320319 +0000
@@ -18,6 +18,4 @@
   <run_depend>roscpp_traits</run_depend>
   <run_depend>rostime</run_depend>
 
-  <!-- required for messages generated by genpy -->
-  <run_depend>genpy</run_depend>
 </package>
diff -rup -x .git src/rosconsole/CMakeLists.txt src.good/rosconsole/CMakeLists.txt
--- src/rosconsole/CMakeLists.txt	2014-02-02 08:11:05.822869319 +0000
+++ src.good/rosconsole/CMakeLists.txt	2014-02-02 07:51:32.903672687 +0000
@@ -1,7 +1,7 @@
 cmake_minimum_required(VERSION 2.8.3)
 project(rosconsole)
 
-find_package(catkin REQUIRED COMPONENTS cpp_common rostime rosunit)
+find_package(catkin REQUIRED COMPONENTS cpp_common rostime)
 
 find_package(Log4cxx QUIET)
 if(NOT LOG4CXX_LIBRARIES)
diff -rup -x .git src/rosconsole/package.xml src.good/rosconsole/package.xml
--- src/rosconsole/package.xml	2014-02-02 08:11:05.822869319 +0000
+++ src.good/rosconsole/package.xml	2014-02-02 07:51:23.775616864 +0000
@@ -15,7 +15,6 @@
   <build_depend>cpp_common</build_depend>
   <build_depend>log4cxx</build_depend>
   <build_depend>rostime</build_depend>
-  <build_depend>rosunit</build_depend>
 
   <run_depend>apr</run_depend>
   <run_depend>cpp_common</run_depend>
diff -rup -x .git src/roscpp/package.xml src.good/roscpp/package.xml
--- src/roscpp/package.xml	2014-02-02 08:11:06.806875375 +0000
+++ src.good/roscpp/package.xml	2014-02-02 07:54:54.304905136 +0000
@@ -30,7 +30,6 @@
   <build_depend>roscpp_serialization</build_depend>
   <build_depend>roscpp_traits</build_depend>
   <build_depend>rosgraph_msgs</build_depend>
-  <build_depend>roslang</build_depend>
   <build_depend>rostime</build_depend>
   <build_depend>std_msgs</build_depend>
   <build_depend>xmlrpcpp</build_depend>
diff -rup -x .git src/roscpp/src/libros/transport/transport_tcp.cpp src.good/roscpp/src/libros/transport/transport_tcp.cpp
--- src/roscpp/src/libros/transport/transport_tcp.cpp	2014-02-02 08:11:06.814875423 +0000
+++ src.good/roscpp/src/libros/transport/transport_tcp.cpp	2014-02-02 05:35:45.152865011 +0000
@@ -193,6 +193,12 @@ void TransportTCP::setKeepAlive(bool use
   }
 }
 
+static inline const char *inet_ntop(int af, const void *src, char *dst, unsigned long size)
+{
+  struct sockaddr_in6 sa = {af, 0, 0, *(const struct in6_addr *)src, 0};
+  return WSAAddressToString((struct sockaddr *)&sa, sizeof(sa), NULL, dst, &size) ? NULL : dst;
+}
+
 bool TransportTCP::connect(const std::string& host, int port)
 {
   sock_ = socket(s_use_ipv6_ ? AF_INET6 : AF_INET, SOCK_STREAM, 0);
@@ -212,6 +218,7 @@ bool TransportTCP::connect(const std::st
 
   in_addr ina;
   in6_addr in6a;
+  #define inet_pton(af, src, dst) (!WSAStringToAddress((char *)src, af, NULL, (struct sockaddr *)dst, &(sas_len = sizeof(*dst))))
   if (inet_pton(AF_INET, host.c_str(), &ina) == 1)
   {
     sockaddr_in *address = (sockaddr_in*) &sas;
diff -rup -x .git src/xmlrpcpp/src/XmlRpcSocket.cpp src.good/xmlrpcpp/src/XmlRpcSocket.cpp
--- src/xmlrpcpp/src/XmlRpcSocket.cpp	2014-02-02 08:11:11.906906760 +0000
+++ src.good/xmlrpcpp/src/XmlRpcSocket.cpp	2014-02-02 05:35:45.152865011 +0000
@@ -194,6 +194,11 @@ XmlRpcSocket::accept(int fd)
 }
 
 
+static inline const char *inet_ntop(int af, const void *src, char *dst, unsigned long size)
+{
+  struct sockaddr_in6 sa = {af, 0, 0, *(const struct in6_addr *)src, 0};
+  return WSAAddressToString((struct sockaddr *)&sa, sizeof(sa), NULL, dst, &size) ? NULL : dst;
+}
 
 // Connect a socket to a server (from a client)
 bool
